name: Nightly Build

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-changes:
    name: Check for changes
    runs-on: ubuntu-20.04
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for changes in last 24 hours
      id: check
      run: |
        # Check if there are any commits in the last 24 hours
        if git log --since="24 hours ago" --oneline | grep -q .; then
          echo "should_build=true" >> $GITHUB_OUTPUT
        else
          echo "should_build=false" >> $GITHUB_OUTPUT
        fi

  build-nightly:
    name: Build Nightly
    needs: check-changes
    if: needs.check-changes.outputs.should_build == 'true'
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
            name: opcua-client-nightly-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: opcua-client-nightly-windows-x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: opcua-client-nightly-macos-x86_64

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ${{ matrix.name }}.tar.gz opcua-client

    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ${{ matrix.name }}.zip opcua-client.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: target/${{ matrix.target }}/release/${{ matrix.name }}.*
        retention-days: 7
